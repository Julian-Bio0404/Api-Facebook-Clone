# Generated by Django 3.2.5 on 2021-08-27 15:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the was created', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the was las modified.', verbose_name='modified at')),
                ('name', models.CharField(help_text='category name', max_length=100)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the was created', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the was las modified.', verbose_name='modified at')),
                ('name', models.CharField(help_text='pages name', max_length=130)),
                ('slug_name', models.SlugField(help_text='slug name', max_length=60, unique=True)),
                ('photo', models.ImageField(blank=True, help_text='pages profile photo', null=True, upload_to='pages/photos/')),
                ('cover_photo', models.ImageField(blank=True, help_text='pages profile cover photo', null=True, upload_to='pages/cover_photos/')),
                ('about', models.TextField(blank=True, help_text='write something about page')),
                ('likes', models.IntegerField(blank=True, help_text="page's likes", null=True)),
                ('admins', models.ManyToManyField(blank=True, related_name='admins', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fbpages.category')),
                ('creator', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('page_followers', models.ManyToManyField(blank=True, related_name='page_followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date time on which the was created', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date time on which the was las modified.', verbose_name='modified at')),
                ('direction', models.CharField(help_text='pages name', max_length=110)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +99 9999999999. Up to indicative + 10 digits allowed.', regex='^\\+1?\\d{1,4}[ ]\\d{10}$')])),
                ('web_site', models.URLField(blank=True, help_text='page web site')),
                ('social_links', models.URLField(blank=True, help_text='social media', max_length=150)),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fbpages.page')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
