# Generated by Django 3.2.5 on 2021-09-27 18:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fbpages', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='pageinvitation',
            name='guest_user',
            field=models.ForeignKey(help_text='User that used the invitation.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guest_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pageinvitation',
            name='inviting_user',
            field=models.ForeignKey(help_text='User that is providing the invitation.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pageinvitation',
            name='page',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fbpages.page'),
        ),
        migrations.AddField(
            model_name='pagedetail',
            name='page',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fbpages.page'),
        ),
        migrations.AddField(
            model_name='page',
            name='admins',
            field=models.ManyToManyField(blank=True, related_name='admins', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fbpages.category'),
        ),
        migrations.AddField(
            model_name='page',
            name='creator',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='page_followers',
            field=models.ManyToManyField(blank=True, related_name='page_followers', to=settings.AUTH_USER_MODEL),
        ),
    ]
